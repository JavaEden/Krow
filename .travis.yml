language: java
dist: trusty
sudo: false

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
    directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

branches:
    only:
    - master
    - dev

jobs:
    include:
    - install: ./gradlew assemble -Prelease=$TRAVIS_PULL_REQUEST
      script: ./gradlew check -Prelease=$TRAVIS_PULL_REQUEST
      os: linux
      jdk: openjdk8
    - install: ./gradlew assemble -Prelease=$TRAVIS_PULL_REQUEST
      script: ./gradlew check -Prelease=$TRAVIS_PULL_REQUEST
      os: linux
      jdk: oraclejdk8
    - install: ./gradlew assemble -Prelease=$TRAVIS_PULL_REQUEST
      script: ./gradlew check -Prelease=$TRAVIS_PULL_REQUEST
      os: osx
      osx_image: xcode8.3

    - stage: afterTests
      install: ./gradlew assemble
      script: ./gradlew codeCoverageReport sendCoverageToCodacy
      os: linux
      jdk: openjdk8

    - stage: release
      os: linux
      jdk: openjdk8
      install: ./gradlew assemble -Prelease -Penv=prod
      script: ./gradlew deploy -Prelease -Penv=prod
      after_success:
        - git config --local user.name "Travis CI Deployment Bot"
        - git config --local user.email "deploy@travis-ci.org"
        - ./gradlew tag -Prelease
        - export GRADLE_PROJECT_RELEASE_NAME=$(./gradlew getReleaseName --quiet)
        - export GRADLE_PROJECT_RELEASE_NOTES=$(./gradlew getReleaseNotes --quiet)
      deploy:
        - provider: releases
          skip_cleanup: true
          api_key: $GITHUB_TOKEN
          name: v${GRADLE_PROJECT_RELEASE_NAME} Release

stages:
- test
- afterTests
- name: release
  if: branch = master AND tag IS blank AND type IN (push)

